package com.isuwang.soa.hello;

      import com.isuwang.dapeng.core.*;
      import com.isuwang.org.apache.thrift.*;
      import com.isuwang.dapeng.remoting.BaseCommonServiceClient;
      import java.util.concurrent.CompletableFuture;
      import java.util.concurrent.Future;
      import com.isuwang.soa.hello.HelloServiceCodec.*;

      /**
       * Autogenerated by Dapeng-Code-Generator (1.2.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

      **/
      public class HelloServiceClient extends BaseCommonServiceClient{

      public HelloServiceClient() {
        super("com.isuwang.soa.hello.service.HelloService", "1.0.0");
      }

      @Override
      protected boolean isSoaTransactionalProcess(){
        return false;
      }

      
       /**
       * 
       **/
          
              public com.isuwang.soa.hello.domain.Hello sayHello(String content) throws SoaException{
                initContext("sayHello");

          try {
             sayHello_args sayHello_args = new sayHello_args();
          sayHello_args.setContent(content);
            

          sayHello_result response = sendBase(sayHello_args, new SayHello_argsSerializer(), new SayHello_resultSerializer());

             
                  
                        return response.getSuccess();
                      
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        

      /**
      * getServiceMetadata
      **/
      public String getServiceMetadata() throws SoaException {
        initContext("getServiceMetadata");
        try {
          getServiceMetadata_args getServiceMetadata_args = new getServiceMetadata_args();
          getServiceMetadata_result response = sendBase(getServiceMetadata_args, new GetServiceMetadata_argsSerializer(), new GetServiceMetadata_resultSerializer());
          return response.getSuccess();
        }catch (SoaException e){
          throw e;
        } catch (TException e){
          throw new SoaException(e);
        } finally {
          destoryContext();
        }
      }

      }
    